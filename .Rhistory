t.fit <- glm(poor_disp ~ hm.exp, family = poisson, data = p.f)
summary(t.fit)
# blood pressure variables
hm.rr = robust.poisson.rr(p.f, p.f$hm.exp, p.f$died, "h.asmap_cat", cat = levels(p.f$hm.exp)[-1])
hm.rra = robust.poisson.rr.ad(p.f, p.f$hm.exp, p.f$died, "h.asmap_cat", cat = levels(p.f$hm.exp)[-1])
hs.rr = robust.poisson.rr(p.f, p.f$hs.exp, p.f$died, "h.assbp_cat", cat = levels(p.f$hs.exp)[-1])
hs.rra = robust.poisson.rr.ad(p.f, p.f$hs.exp, p.f$died, "h.assbp_cat", cat = levels(p.f$hs.exp)[-1])
hma.rr = robust.poisson.rr(p.f, p.f$hma.exp, p.f$died, "ha.asmap_cat", cat = levels(p.f$hma.exp)[-c(1,2)])
hma.rra = robust.poisson.rr.ad(p.f, p.f$hma.exp, p.f$died, "ha.asmap_cat", cat = levels(p.f$hma.exp)[-1])
hsa.rr = robust.poisson.rr(p.f, p.f$hsa.exp, p.f$died, "ha.assbp_cat", cat = levels(p.f$hsa.exp)[-1])
hsa.rra = robust.poisson.rr.ad(p.f, p.f$hsa.exp, p.f$died, "ha.assbp_cat", cat = levels(p.f$hsa.exp)[-1])
d.rr <- rbind(nh.rr, he.rr, hs.rr, va.rr, hm.rr, hma.rr, hsa.rr)
d.arr <- rbind(hm.rra, hs.rra, hma.rra, hsa.rra)
det.t2.rr <- merge(det.t2, d.rr, by = c("var", "cat"), all.x = T)
d.t2 <- merge(det.t2.rr, d.arr, by = c("var", "cat"), all.x = T)
d.t2 <- unique(d.t2)
colnames(d.t2)[7:8] <- c("rr.d", "arr.d")
t2 <- merge(f.t2, d.t2, by = c("var", "cat"))
t2
write.csv(t2, "t2_expanded_d.csv")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
# Program Install #######
library(ggplot2)
library(plyr)
library(dplyr)
library(tidyr)
library(tableone)
library(stats)
library(Epi)
library(epiR)
library(gridExtra)
library(readxl)
library(pROC)
library(forestplot)
library(cowplot)
library(tigerstats)
library(survival)
library(uwIntroStats)
library(lmtest)
library(reshape2)
library(sandwich)
library(ROCR)
library(scales)
bp <- read_rds("bp_pt.rds")
bp <- read_rds("bp_pt.rds")
bp <- readRDS("bp_pt.rds")
bp <- readRDS("bp_pt.rds")
bp <- readRDS("bp_pt.rds")
bp$sex
summary(bp$sex)
summary(as.factor(bp$sex))
115/166
summary(as.factor(bp$mechanism))
summary(as.factor(bp$cause))
bp$
summary(as.factor(bp$cause))
summary(as.factor(bp$cause))
55/166
median(bp$gcs_1adm)
median(bp$gcs_1pic)
(bp$gcs_1pic)
(bp$gcs_1pic, na.rm = T)
median(bp$gcs_1pic, na.rm = T)
median(bp$gcs_1adm, na.rm = T)
median(bp$`ED GCS MOTOR`, na.rm = T)
median(bp$gcs_1adm, na.rm = T)
bp$poor_disp
summary(as.factor(bp$poor_disp))
50/166
summary(as.factor(bp$died))
28/166
pd <- bp[bp$poor_disp == 1,]
fd <- bp[bp$poor_disp == 0,]
median(pd$age)
quantile(pd$age, .25)
quantile(pd$age, .75)
median(pd$age)
quantile(pd$age, .25)
quantile(pd$age, .75)
c(median(pd$age),
quantile(pd$age, .25),
quantile(pd$age, .75))
c(med = median(pd$age),
quantile(pd$age, .25),
quantile(pd$age, .75))
c(median = median(fd$age),
quantile(fd$age, .25),
quantile(fd$age, .75))
setwd("~/Career/Application_Fall2019/R Portfolio")
setwd("~/Career/Application_Fall2019/R Portfolio")
setwd("~/Career/Application_Fall2019/R Portfolio")
setwd("C:/Users/scott/OneDrive - UW/UW Medicine/PEGASUS/Blood Pressure Paper/BP_TBI_R_Project/BP_TBI_R_Project")
m <- readRDS("bp_surv12.rds")
m %>% group_by(id) %>% summarise(l = length())
m %>% group_by(id) %>% summarise()
m %>% group_by(id)
m %>% group_by(id) %>% tally()
summary(m %>% group_by(id) %>% tally())
min(bp$map.min)
summary(bp$map.min)
summary(bp$h.asmapp)
rm(list = ls())
bp.pt <- readRDS("bp_pt.rds")
thresh.list <- seq(0.05,1, by = 0.05)
sens.cutoff <- function(exp.var, out.var, name){
df <- data.frame(threshold = thresh.list, sens = rep(99, 20), sp = rep(99,20), youden = rep(99,20))
n_poordisp <- sum(bp.pt$poor_disp)
n_favdisp <- sum(bp.pt$fav_disp)
for(i in thresh.list){
tp <- ifelse(exp.var < i & out.var == 1, 1, 0)
tn <- ifelse(exp.var >= i & out.var == 0, 1, 0)
df$sens[df$threshold == i] <- sum(tp)/n_poordisp
df$sp[df$threshold == i] <- sum(tn)/n_favdisp
}
df$youden <- df$sens + df$sp - 1
df$id <- name
df
}
m.f <- sens.cutoff(bp.pt$h.asmapp, bp.pt$poor_disp, "map_low_discharge")
s.f <- sens.cutoff(bp.pt$h.assbpp, bp.pt$poor_disp, "sbp_low_discharge")
m.d <- sens.cutoff(bp.pt$h.asmapp, bp.pt$died, "map_low_death")
s.d <- sens.cutoff(bp.pt$h.assbpp, bp.pt$died, "sbp_low_death")
ma.f <- sens.cutoff(bp.pt$h.ave.asmapp, bp.pt$poor_disp, "map_average_discharge")
cut.df <- rbind(m.f, s.f, m.d, s.d)
#cut.df <- rbind(m.d, s.d)
se.plot <- ggplot(cut.df, aes(x = threshold, y = sens, color = id))+
geom_point()+
ggtitle("Sensitivity")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
sp.plot <- ggplot(cut.df, aes(x = threshold, y = sp, color = id))+
geom_point()+
ggtitle("Specificity")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
yo.plot <- ggplot(cut.df, aes(x = threshold, y = youden, color = id))+
geom_point()+
ggtitle("Youden")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
plot_grid(se.plot, sp.plot, yo.plot, nrow = 1)
rm(list = ls())
bp.pt <- readRDS("bp_pt.rds")
thresh.list <- seq(0.05,1, by = 0.05)
sens.cutoff <- function(exp.var, out.var, name){
df <- data.frame(threshold = thresh.list, sens = rep(99, 20), sp = rep(99,20), youden = rep(99,20))
n_poordisp <- sum(bp.pt$poor_disp)
n_favdisp <- sum(bp.pt$fav_disp)
for(i in thresh.list){
tp <- ifelse(exp.var < i & out.var == 1, 1, 0)
tn <- ifelse(exp.var >= i & out.var == 0, 1, 0)
df$sens[df$threshold == i] <- sum(tp)/n_poordisp
df$sp[df$threshold == i] <- sum(tn)/n_favdisp
}
df$youden <- df$sens + df$sp - 1
df$id <- name
df
}
m.f <- sens.cutoff(bp.pt$h.asmapp, bp.pt$poor_disp, "map_low_discharge")
s.f <- sens.cutoff(bp.pt$h.assbpp, bp.pt$poor_disp, "sbp_low_discharge")
m.d <- sens.cutoff(bp.pt$h.asmapp, bp.pt$died, "map_low_death")
s.d <- sens.cutoff(bp.pt$h.assbpp, bp.pt$died, "sbp_low_death")
ma.f <- sens.cutoff(bp.pt$h.ave.asmapp, bp.pt$poor_disp, "map_average_discharge")
cut.df <- rbind(m.f, s.f, m.d, s.d)
#cut.df <- rbind(m.d, s.d)
se.plot <- ggplot(cut.df, aes(x = threshold, y = sens, color = id))+
geom_point()+
ggtitle("Sensitivity")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
sp.plot <- ggplot(cut.df, aes(x = threshold, y = sp, color = id))+
geom_point()+
ggtitle("Specificity")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
yo.plot <- ggplot(cut.df, aes(x = threshold, y = youden, color = id))+
geom_point()+
ggtitle("Youden")+
theme_classic()+
theme(legend.position =  "bottom",
legend.direction = "vertical")
plot_grid(se.plot, sp.plot, yo.plot, nrow = 1)
reshape(cut.df, idvar = "id")
reshape(cut.df, idvar = "id", direction = "wide")
cut.df$
reshape(cut.df,
idvar = "id",
timevar = "threshold",
direction = "wide")
cut.df$
reshape(cut.df,
idvar = "id",
timevar = "threshold",
direction = "wide")
reshape(cut.df,
idvar = "id",
timevar = "threshold",
direction = "wide")
reshape(cut.df,
idvar = "id",
timevar = "threshold",
direction = "wide")
reshape(cut.df,
idvar = "threshold",
direction = "wide")
reshape(cut.df,
idvar = "threshold",
timevar = "id",
direction = "wide")
t3 <- reshape(cut.df,
idvar = "threshold",
timevar = "id",
direction = "wide")
write.csv(t3, "t3.csv")
bp.pt <- readRDS("bp_pt.rds")
library(pROC)
roc.ggplot <- function(outcome, test){
roc <- roc(outcome ~ test)
ci(roc)
ci_auc <- ci.auc(roc, conf.level = 0.95)
ciobj <- ci.se(roc)
dat.ci <- data.frame(x = as.numeric(rownames(ciobj)),
lower = ciobj[,1],
upper = ciobj[,3])
plot <- ggroc(roc) +
geom_ribbon(data = dat.ci, aes (x = x, ymin = lower, ymax = upper), fill = "steelblue", alpha = 0.2)+
geom_abline(slope = 1, intercept = 1, linetype = "dashed", alpha = 0.7, color = "grey")+
annotate("text", x = 0.5, y = 0.1, label = paste("AUC = ",
round(ci_auc[2],2),
" (95% CI: ",
round(ci_auc[1],2),
",",
round(ci_auc[3],2),
")", sep = ""))+
coord_equal()+
theme_minimal()
plot
}
f.map <- roc.ggplot(bp.pt$poor_disp, bp.pt$h.asmapp)
f.sbp <- roc.ggplot(bp.pt$poor_disp, bp.pt$h.assbpp)
s.map <- roc.ggplot(bp.pt$died, bp.pt$h.asmapp)
s.sbp <- roc.ggplot(bp.pt$died, bp.pt$h.assbpp)
plot_grid(f.map, f.sbp,
s.map, s.sbp,
labels = c("MAPP Discharge", "SBPP Discharge",
"MAPP Survival", "SBPP Survival"),
nrow = 2)
ggsave("roc.png", width = 8, height = 8)
roc <- roc(bp.pt$poor_disp, bp.pt$h.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.map.df <- roc.df
f.map.df$id = "f.map"
roc <- roc(bp.pt$poor_disp, bp.pt$h.assbpp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.sbp.df <- roc.df
f.sbp.df$id = "f.sbp"
roc <- roc(bp.pt$died, bp.pt$h.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.map.df <- roc.df
d.map.df$id <- "d.map"
roc <- roc(bp.pt$died, bp.pt$h.assbpp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.sbp.df <- roc.df
d.sbp.df$id <- "d.sbp"
roc <- roc(bp.pt$died, bp.pt$h.ave.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.map_a.df <- roc.df
d.map_a.df$id <- "d.map_ave"
roc <- roc(bp.pt$poor_disp, bp.pt$h.ave.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.map_a.df <- roc.df
f.map_a.df$id <- "f.map_ave"
large.df <- rbind(f.map.df, f.sbp.df, d.map.df, d.sbp.df)
long.df <- melt(large.df, id.vars = c("cut", "id"))
long.df$id <- factor(long.df$id,
levels = unique(long.df$id),
labels = c("Favorable discharge MAPP low",
"Favorable discharge SBPP low",
"Survival MAPP low",
"Survival SBPP low"))
long.df$variable <- factor(long.df$variable,
levels = unique(long.df$variable),
labels = c("Sensitivity",
"Specificity",
"Youden index"))
#long.df$bp_type = ifelse(long.df$id == levels(long.df$id)[2] | long.df$id == levels(long.df$id)[4], "SBPP", "MAPP")
#long.df$outcome = ifelse(long.df$id == levels(long.df$id)[1] | long.df$id == levels(long.df$id)[2], "Favorable discharge", "Survival")
#roc$thresholds
ggplot(long.df, aes(x = cut, y = value, color = id, linetype = id))+
geom_line()+
facet_wrap(~variable, nrow = 1)+
theme_minimal()+
labs(x = "Percentile cutoff",
color = "")+
scale_x_continuous(breaks = seq(0,1, by = 0.1))+
coord_cartesian(expand = F)+
theme(legend.position = "bottom",
legend.direction = "vertical")
ggsave("roc_table.png", width = 8, height = 8)
qnorm(0.1, mean = bp$h.asmapp[1], sd= 2)
bp <- readRDS("bp_pt.rds")
summary(as.factor(bp$sex))
115/166
summary(as.factor(bp$cause))
55/166
median(bp$gcs_1adm, na.rm = T)
median(bp$`ED GCS MOTOR`, na.rm = T)
summary(as.factor(bp$poor_disp))
50/166
summary(as.factor(bp$died))
28/166
pd <- bp[bp$poor_disp == 1,]
c(median = median(pd$age),
quantile(pd$age, .25),
quantile(pd$age, .75))
fd <- bp[bp$poor_disp == 0,]
c(median = median(fd$age),
quantile(fd$age, .25),
quantile(fd$age, .75))
qnorm(0.1, mean = bp$h.asmapp[1], sd= 2)
qnorm(0.1, mean = bp$h.asmapp[1], sd= bp$asmapp.sd[1])
qnorm(0.2, mean = bp$h.asmapp[1], sd= bp$asmapp.sd[1])
qnorm(0.5, mean = bp$h.asmapp[1], sd= bp$asmapp.sd[1])
qnorm(0.5, mean = bp$asmapp.50, sd = bp$asmapp.sd)
bp$asmapp.sd
sd = bp$asmapp.sd
s.sd = bp$assbpp.sd
m.sd = unique(bp$asmapp.sd)
age = seq(1,18, by = 1)
t3.df = data.frame(age = seq(1,18, by = 1),
m.50 = age*1.5 + 55,
m.sd = 9.37
s.50 = age*1.5+55,
t3.df = data.frame(age = seq(1,18, by = 1),
m.50 = age*1.5 + 55,
m.sd = 9.37,
s.50 = age*1.5+55,
s.sd = 12.5)
t3 = t3.df %>% mutate(
mq.05 = qnorm(0.05, mean = m.50, sd = m.sd),
sq.05 = qnorm(0.05, mean = s.50, sd = s.sd),
mq.10 = qnorm(0.10, mean = m.50, sd = m.sd),
sq.10 = qnorm(0.10, mean = s.50, sd = s.sd),
mq.25 = qnorm(0.25, mean = m.50, sd = m.sd),
sq.25 = qnorm(0.25, mean = s.50, sd = s.sd),
mq.50 = qnorm(0.5, mean = m.50, sd = m.sd),
sq.50 = qnorm(0.5, mean = s.50, sd = s.sd),
mq.95 = qnorm(0.95, mean = m.50, sd = m.sd),
sq.95 = qnorm(0.95, mean = s.50, sd = s.sd),
)
round(t3, 0)
t3.out <- round(t3, 0)
t3.out <- round(t3[,c(1,6:18)], 0)
t3.out <- round(t3[,c(1,6:15)], 0)
View(t3.out)
write.csv(t3.out, "t3.csv")
write.csv("t3.csv", t3.out)
write.csv(t3.out, "t3.csv")
setwd("C:/Users/scott/OneDrive - UW/UW Medicine/PEGASUS/Blood Pressure Paper/BP_TBI_R_Project/BP_TBI_R_Project")
write.csv(t3.out, "t3.csv")
getwd()
t3.out <- round(t3[,c(1,6:15)], 0)
View(t3.out)
t3 = t3.df %>% mutate(
m.05 = 1.5*age + 40,
mq.05 = qnorm(0.05, mean = m.50, sd = m.sd),
sq.05 = qnorm(0.05, mean = s.50, sd = s.sd),
mq.10 = qnorm(0.10, mean = m.50, sd = m.sd),
sq.10 = qnorm(0.10, mean = s.50, sd = s.sd),
mq.25 = qnorm(0.25, mean = m.50, sd = m.sd),
sq.25 = qnorm(0.25, mean = s.50, sd = s.sd),
mq.50 = qnorm(0.5, mean = m.50, sd = m.sd),
sq.50 = qnorm(0.5, mean = s.50, sd = s.sd),
mq.95 = qnorm(0.95, mean = m.50, sd = m.sd),
sq.95 = qnorm(0.95, mean = s.50, sd = s.sd),
)
View(t3)
View(t3)
bp.pt <- readRDS("bp_pt.rds")
library(pROC)
roc.ggplot <- function(outcome, test){
roc <- roc(outcome ~ test)
ci(roc)
ci_auc <- ci.auc(roc, conf.level = 0.95)
ciobj <- ci.se(roc)
dat.ci <- data.frame(x = as.numeric(rownames(ciobj)),
lower = ciobj[,1],
upper = ciobj[,3])
plot <- ggroc(roc) +
geom_ribbon(data = dat.ci, aes (x = x, ymin = lower, ymax = upper), fill = "steelblue", alpha = 0.2)+
geom_abline(slope = 1, intercept = 1, linetype = "dashed", alpha = 0.7, color = "grey")+
annotate("text", x = 0.5, y = 0.1, label = paste("AUC = ",
round(ci_auc[2],2),
" (95% CI: ",
round(ci_auc[1],2),
",",
round(ci_auc[3],2),
")", sep = ""))+
coord_equal()+
theme_minimal()
plot
}
f.map <- roc.ggplot(bp.pt$poor_disp, bp.pt$h.asmapp)
f.sbp <- roc.ggplot(bp.pt$poor_disp, bp.pt$h.assbpp)
s.map <- roc.ggplot(bp.pt$died, bp.pt$h.asmapp)
s.sbp <- roc.ggplot(bp.pt$died, bp.pt$h.assbpp)
plot_grid(f.map, f.sbp,
s.map, s.sbp,
labels = c("MAPP Discharge", "SBPP Discharge",
"MAPP Survival", "SBPP Survival"),
nrow = 2)
ggsave("roc.png", width = 8, height = 8)
roc <- roc(bp.pt$poor_disp, bp.pt$h.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.map.df <- roc.df
f.map.df$id = "f.map"
roc <- roc(bp.pt$poor_disp, bp.pt$h.assbpp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.sbp.df <- roc.df
f.sbp.df$id = "f.sbp"
roc <- roc(bp.pt$died, bp.pt$h.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.map.df <- roc.df
d.map.df$id <- "d.map"
roc <- roc(bp.pt$died, bp.pt$h.assbpp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.sbp.df <- roc.df
d.sbp.df$id <- "d.sbp"
roc <- roc(bp.pt$died, bp.pt$h.ave.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
d.map_a.df <- roc.df
d.map_a.df$id <- "d.map_ave"
roc <- roc(bp.pt$poor_disp, bp.pt$h.ave.asmapp)
roc.df <- data.frame(sens = roc$sensitivities, spe = roc$specificities, cut = roc$thresholds)
roc.df$youden = roc.df$sens + roc.df$spe -1
f.map_a.df <- roc.df
f.map_a.df$id <- "f.map_ave"
large.df <- rbind(f.map.df, f.sbp.df, d.map.df, d.sbp.df)
long.df <- melt(large.df, id.vars = c("cut", "id"))
long.df$id <- factor(long.df$id,
levels = unique(long.df$id),
labels = c("Favorable discharge MAPP low",
"Favorable discharge SBPP low",
"Survival MAPP low",
"Survival SBPP low"))
long.df$variable <- factor(long.df$variable,
levels = unique(long.df$variable),
labels = c("Sensitivity",
"Specificity",
"Youden index"))
#long.df$bp_type = ifelse(long.df$id == levels(long.df$id)[2] | long.df$id == levels(long.df$id)[4], "SBPP", "MAPP")
#long.df$outcome = ifelse(long.df$id == levels(long.df$id)[1] | long.df$id == levels(long.df$id)[2], "Favorable discharge", "Survival")
#roc$thresholds
ggplot(long.df, aes(x = cut, y = value, color = id, linetype = id))+
geom_line()+
facet_wrap(~variable, nrow = 1)+
theme_minimal()+
labs(x = "Percentile cutoff",
color = "")+
scale_x_continuous(breaks = seq(0,1, by = 0.1))+
coord_cartesian(expand = F)+
theme(legend.position = "bottom",
legend.direction = "vertical")
ggsave("roc_table.png",
width = 8,
height = 8)
long.df$variable
long.df$value
View(long.df)
long.df$cut[long.df$variable == "Youden Index"]
long.df$cut[long.df$variable == "Youden Index",]
long.df$cut[long.df$variable == "Youden Index"]
long.df$cut
long.df$variable
long.df$cut[long.df$variable == "Youden index"]
long.df[long.df$variable == "Youden index"]
long.d[long.df$variable == "Youden index",]
long.df[long.df$variable == "Youden index",]
yo <- long.df[long.df$variable == "Youden index",]
View(yo)
source('~/Career/Application_Fall2019/R Portfolio/R_portfolio_SeattleCrime.R', echo=TRUE)
write.xlsx(c, "Seattle_crime.xslx")
# load packages
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.csv(c, "Seattle_crime.csv")
write.csv(c.cat.yr.m, "sea_crimerate.csv")
SessionInfo()
Sessioninfo()
sessioninfo()
version
sessionInfo()
